{"version":3,"file":"static/js/45.9e52411c.chunk.js","mappings":"wTACA,GAAiB,E,SCcjB,EAZiB,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QAGhB,OACIC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,MAAWC,IAA+B,OAAzBN,EAAQO,aAAyBC,EAJlD,kCAI0FR,EAAQO,aAAeE,IAAKT,EAAQU,KAAMC,MAAM,MAAMC,OAAO,SACvKT,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,KAASH,SAAEF,EAAQa,kBAG7C,E,SCXA,EAA0B,sBC4C1B,EArCa,WACT,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdG,EAASV,EAATU,KACAC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,eAAAjC,GAAAkC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEM,OAFNF,EAAAC,KAAA,EAEbf,GAAa,GAAMc,EAAAE,KAAA,GACAC,EAAAA,EAAAA,IAAQX,GAAS,KAAD,EAA7BO,EAAIC,EAAAI,KACVtB,EAAYiB,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAGlBV,EAAQU,EAAAK,IAAQ,QAEI,OAFJL,EAAAC,KAAA,GAEhBf,GAAa,GAAOc,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAT,EAAA,wBAE3B,kBAXiB,OAAApC,EAAA8C,MAAA,KAAAC,UAAA,KAalBd,GACH,GAAG,CAACH,KAGD5B,EAAAA,EAAAA,MAAA8C,EAAAA,SAAA,CAAA7C,SAAA,CACKwB,IAASvB,EAAAA,EAAAA,KAAA,MAAAD,SAAKwB,IACdJ,GAAYnB,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,KAChB7C,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYH,SAClB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMqB,KAAI,SAACC,EAAIC,GAAK,OAAKhD,EAAAA,EAAAA,KAACiD,EAAQ,CAACpD,QAASkD,GAASC,EAAS,QAKnF,C","sources":["components/CastItem/CastItem.module.css","components/CastItem/CastItem.jsx","webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import defaultPersonImage from '../../images/default-person-image.jpg'\nimport css from './CastItem.module.css'\n\nconst CastItem = ({ element }) => {\n    const INIT_PATH_IMAGE = 'https://image.tmdb.org/t/p/w500';\n    \n    return (\n        <li>\n            <img className={css.image} src={(element.profile_path === null) ? defaultPersonImage : (INIT_PATH_IMAGE + element.profile_path)} alt={element.name} width='220' height='330'/>\n            <p className={css.text}>{element.original_name}</p>\n        </li>\n    )\n}\n\n\nexport default CastItem;","// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"Cast_gallery__ay+Fg\"};","import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getCast } from '../../services/movies';\nimport CastItem from '../../components/CastItem/CastItem'\nimport Loader from '../../components/Loader/Loader'\n\nimport css from './Cast.module.css'\n\nconst Cast = () => {\n    const [castData, setCastData] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const { cast } = castData;\n    const { movieId } = useParams();    \n    \n    useEffect(() => {\n        const getMovieCast = async () => {\n            try {\n                setIsLoading(true);\n                const data = await getCast(movieId);\n                setCastData(data);\n            } catch (error) {\n            // change:\n                setError(error);\n            } finally { \n                setIsLoading(false);\n            }\n        }\n\n        getMovieCast();\n     }, [movieId]) \n\n    return (\n        <>\n            {error && <h1>{error}</h1>}\n            {isLoading ? <Loader /> :\n                <ul className={css.gallery}>\n                    {cast?.map((el, index) => <CastItem element={el} key={index} />)}\n                </ul>\n            }\n        </>\n    )\n}\n\n\nexport default Cast;"],"names":["_ref","element","_jsxs","children","_jsx","className","css","src","profile_path","defaultPersonImage","alt","name","width","height","original_name","_useState","useState","_useState2","_slicedToArray","castData","setCastData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","cast","movieId","useParams","useEffect","getMovieCast","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getCast","sent","t0","finish","stop","apply","arguments","_Fragment","Loader","map","el","index","CastItem"],"sourceRoot":""}