{"version":3,"file":"static/js/650.887c7444.chunk.js","mappings":"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","sources":["webpack://movie-watcher/./src/components/CastItem/CastItem.module.css?d4dc","components/CastItem/CastItem.jsx","webpack://movie-watcher/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://movie-watcher/./src/components/NoInformation/NoInformation.module.css?4333","components/NoInformation/NoInformation.jsx","services/api.js","services/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CastItem_item__CwDkT\",\"textWrapper\":\"CastItem_textWrapper__-mE0s\",\"text\":\"CastItem_text__jEM4w\",\"image\":\"CastItem_image__xzLhD\"};","import defaultPersonImage from 'images/default-person-image.jpg'\nimport css from 'components/CastItem/CastItem.module.css'\n\nconst CastItem = ({ element }) => {\n    const INIT_PATH_IMAGE = 'https://image.tmdb.org/t/p/w500';\n    \n    return (\n        <li className={css.item}>\n            <img className={css.image} src={(element.profile_path === null) ? defaultPersonImage : (INIT_PATH_IMAGE + element.profile_path)} alt={element.name} width='170' height='255' />\n            <div className={css.textWrapper}>\n                <p className={css.text}>{element.original_name}</p>\n            </div> \n        </li>\n    )\n}\n\n\nexport default CastItem;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Cast_title__0cH9s\",\"gallery\":\"Cast_gallery__LrDoG\"};","import { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { getCast } from 'services/movies'\nimport CastItem from 'components/CastItem/CastItem'\nimport Loader from 'components/Loader/Loader'\nimport NoInformation from 'components/NoInformation/NoInformation'\n// import Button from 'components/Button/Button'\n\nimport css from 'components/Cast/Cast.module.css'\n\nconst Cast = () => {\n    const [castData, setCastData] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    // \n    // const [castArrays, setCastArrays] = useState([]);\n    // const [page, setPage] = useState(1);\n    // const [totalPages, setTotalPages] = useState(0);\n    // \n\n    const { cast } = castData;\n    const { movieId } = useParams();    \n\n    // function chunkArray(cast, chunk) {\n    //     const newArray = [];\n    //     for (let i = 0; i < cast?.length; i += chunk) {\n    //         newArray.push(cast?.slice(i, i + chunk));\n    //     }\n    //     return newArray;\n    // }\n    // const res = chunkArray(cast, 10);\n    \n    // console.log(res);\n    // console.log(cast?.length);\n\n     \n\n    \n\n    // const handleLoadAll = () => { \n    //     setPage((prev) => prev + 1)\n    // }\n    \n    useEffect(() => {\n        const getMovieCast = async () => {\n            try {\n                setIsLoading(true);\n                const data = await getCast(movieId);\n                setCastData(data);\n                // \n                // setCastArrays((prev) => page > 1 ? [...prev, ...response.hits] : response.hits);\n                // setTotalPages(Math.ceil(response.totalHits / 12));\n            } catch (error) {\n                // change:\n                setError(error);\n            } finally { \n                setIsLoading(false);\n            }\n        }\n        \n        getMovieCast();\n    }, [movieId]) \n    \n\n    return (\n        <>\n            {error && <h1>{error}</h1>}\n            {isLoading ? <Loader /> :\n                <>  \n                    <h2 className={css.title}>Cast</h2>\n                    {cast?.length > 0 ? (\n                        <ul className={css.gallery}>\n                            {cast?.map((el, index) => <CastItem element={el} key={index} />)}\n                        </ul>) :\n                        <NoInformation />}\n                    \n                    {/*  */}\n                    {/* {totalPages > 1 && page !== totalPages && <Button handleLoadAll={handleLoadAll} />} */}\n                </>\n            }\n        </>\n    )\n}\n\n\nexport default Cast;","// extracted by mini-css-extract-plugin\nexport default {\"caption\":\"NoInformation_caption__u2BlA\"};","import css from 'components/NoInformation/NoInformation.module.css'\n\n\nconst NoInformation = () => {\n    \n    return (\n        <p className={css.caption}>Information hasn't been found for this movie.</p>\n    )\n}\n\n\nexport default NoInformation;","import axios from 'axios';\n\n\nexport const api = axios.create({\n    baseURL: 'https://api.themoviedb.org',\n    headers : 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YzlkNDBlZmU0MDY0OTg1NDEzNGNmYjBjN2I3NDlhZCIsInN1YiI6IjY1OWVmNjk4ZmM1ZjA2MDBlZWMwNjhkYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.aIr7-CVGT2jT9DwLttfCYQotn2obDUZrLpp4n756NJ8'\n})\n","import { api } from './api'\n\nconst API_KEY = '6c9d40efe40649854134cfb0c7b749ad';\n\nexport const getTrendingMovies = async (page) => { \n    const { data } = await api(`3/trending/movie/day?page=${page}&language=en-US&api_key=${API_KEY}`)\n    return data\n}\n\nexport const getMovieDetails = async (movieId) => { \n    const { data } = await api(`3/movie/${movieId}?language=en-US&api_key=${API_KEY}`)\n\treturn data\n}\n\nexport const getCast = async (movieId) => { \n    const { data } = await api(`3/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`)\n\treturn data\n}\n\n// add query params - page ? \n\nexport const getReviews = async (movieId) => { \n    const { data } = await api(`3/movie/${movieId}/reviews?language=en-US&page=1&api_key=${API_KEY}`)\n\treturn data\n}\n\nexport const getMoviesByName = async (query) => { \n    const { data } = await api(`3/search/movie?include_adult=false&language=en-US&page=1&query=${query}&api_key=${API_KEY}`)\n\treturn data\n}\n"],"names":["_ref","element","_jsxs","className","css","children","_jsx","src","profile_path","defaultPersonImage","alt","name","width","height","original_name","_useState","useState","_useState2","_slicedToArray","castData","setCastData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","cast","movieId","useParams","useEffect","getMovieCast","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getCast","sent","t0","finish","stop","apply","arguments","_Fragment","Loader","length","map","el","index","CastItem","NoInformation","api","axios","baseURL","headers","API_KEY","getTrendingMovies","page","_yield$api","concat","abrupt","_x","getMovieDetails","_ref2","_callee2","_yield$api2","_context2","_x2","_ref3","_callee3","_yield$api3","_context3","_x3","getReviews","_ref4","_callee4","_yield$api4","_context4","_x4","getMoviesByName","_ref5","_callee5","query","_yield$api5","_context5","_x5"],"sourceRoot":""}