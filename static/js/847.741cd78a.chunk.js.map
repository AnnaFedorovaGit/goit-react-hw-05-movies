{"version":3,"file":"static/js/847.741cd78a.chunk.js","mappings":"sPACA,GAAiB,E,SCYjB,EAXoB,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QAEnB,OACIC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,KAAGE,UAAWC,EAAAA,KAASF,SAAA,CAAC,WAASF,EAAQK,WACzCC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,KAASF,SAAEF,EAAQO,YAG7C,ECTA,GAAiB,ECSjB,EARoB,WAEhB,OACID,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,KAASF,SAAC,6CAEhC,E,SCNA,GAAiB,ECgDjB,EAxCgB,WAAO,IAADM,EAAAC,EAClBC,GAAsCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdG,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,eAAA5B,GAAA6B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEG,OAFHF,EAAAC,KAAA,EAEhBd,GAAa,GAAMa,EAAAE,KAAA,GACAC,EAAAA,EAAAA,IAAWX,GAAS,KAAD,EAAhCO,EAAIC,EAAAI,KACVrB,EAAegB,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAGrBT,EAAQS,EAAAK,IAAQ,QAEI,OAFJL,EAAAC,KAAA,GAEhBd,GAAa,GAAOa,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAT,EAAA,wBAE3B,kBAXoB,OAAA/B,EAAAyC,MAAA,KAAAC,UAAA,KAarBd,GACJ,GAAG,CAACH,KAGAvB,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAAxC,SAAA,CACKoB,IAAShB,EAAAA,EAAAA,KAAA,MAAAJ,SAAKoB,IACdJ,GAAYZ,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,KAChBrC,EAAAA,EAAAA,KAAAoC,EAAAA,SAAA,CAAAxC,UACwB,QAAnBM,EAAAM,EAAY8B,eAAO,IAAApC,OAAA,EAAnBA,EAAqBqC,QAAS,GAC3BvC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,QAAYF,SACH,QADGO,EACtBK,EAAY8B,eAAO,IAAAnC,OAAA,EAAnBA,EAAqBqC,KAAI,SAACC,EAAIC,GAAK,OAAK1C,EAAAA,EAAAA,KAAC2C,EAAW,CAACjD,QAAS+C,GAASC,EAAS,OAErF1C,EAAAA,EAAAA,KAAC4C,EAAW,QAKpC,C","sources":["components/ReviewsItem/ReviewsItem.module.css","components/ReviewsItem/ReviewsItem.jsx","components/ReviewsLack/ReviewsLack.module.css","components/ReviewsLack/ReviewsLack.jsx","pages/Reviews/Reviews.module.css","pages/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import css from './ReviewsItem.module.css'\n\nconst ReviewsItem = ({ element }) => {\n    \n    return (\n        <li>\n            <p className={css.text}>Author: {element.author}</p>\n            <p className={css.text}>{element.content}</p>\n        </li>\n    )\n}\n\n\nexport default ReviewsItem;","// extracted by mini-css-extract-plugin\nexport default {};","import css from './ReviewsLack.module.css'\n\nconst ReviewsLack = () => {\n    \n    return (\n        <p className={css.text}>We don't have any reviews for this movie.</p>\n    )\n}\n\n\nexport default ReviewsLack;","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getReviews } from '../../services/movies';\nimport ReviewsItem from '../../components/ReviewsItem/ReviewsItem'\nimport ReviewsLack from '../../components/ReviewsLack/ReviewsLack'\nimport Loader from '../../components/Loader/Loader'\n\nimport css from './Reviews.module.css'\n\nconst Reviews = () => {\n    const [reviewsData, setReviewsData] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const { movieId } = useParams();    \n\n    useEffect(() => {\n        const getMovieReviews = async () => {\n            try {\n                setIsLoading(true);\n                const data = await getReviews(movieId);\n                setReviewsData(data);\n            } catch (error) {\n            // change:\n                setError(error);\n            } finally { \n                setIsLoading(false);\n            }\n        }\n        \n        getMovieReviews();\n    }, [movieId]) \n\n    return (\n        <>\n            {error && <h1>{error}</h1>}\n            {isLoading ? <Loader /> :\n                <>\n                    {reviewsData.results?.length > 0 ? (\n                        <ul className={css.gallery}>\n                            {reviewsData.results?.map((el, index) => <ReviewsItem element={el} key={index} />)}\n                        </ul>) :\n                        <ReviewsLack />}\n                </>\n            }   \n        </>\n    )\n}\n\n\nexport default Reviews;"],"names":["_ref","element","_jsxs","children","className","css","author","_jsx","content","_reviewsData$results","_reviewsData$results2","_useState","useState","_useState2","_slicedToArray","reviewsData","setReviewsData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","getMovieReviews","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getReviews","sent","t0","finish","stop","apply","arguments","_Fragment","Loader","results","length","map","el","index","ReviewsItem","ReviewsLack"],"sourceRoot":""}