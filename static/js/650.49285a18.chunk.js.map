{"version":3,"file":"static/js/650.49285a18.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js","services/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"inner\":\"MovieDetails_inner__TSx+o\",\"image\":\"MovieDetails_image__c1FeV\",\"infoWrapper\":\"MovieDetails_infoWrapper__4SlYR\",\"textAverage\":\"MovieDetails_textAverage__-uUl5\",\"textName\":\"MovieDetails_textName__37qUp\"};","import { Suspense, lazy, useEffect, useRef, useState } from 'react'\nimport { Link, NavLink, Route, Routes, useParams, useLocation } from \"react-router-dom\";\nimport { getMovieDetails } from '../../services/movies'\nimport Loader from '../../components/Loader/Loader'\n\nimport defaultImage from '../../images/default-image.jpg'\nimport css from './MovieDetails.module.css'\n\nconst Cast = lazy(() => import('../Cast/Cast'))\nconst Reviews = lazy(() => import('../Reviews/Reviews'))\n\n\nconst MovieDetails = () => {\n    const [movieData, setMovieData] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const { title, poster_path, vote_average, overview, genres } = movieData;\n    const INIT_PATH_IMAGE = 'http://image.tmdb.org/t/p/w500';\n\n    const location = useLocation();\n    const backLinkHref = useRef(location.state?.from ?? '/');\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const getMovies = async () => {\n            try {\n                setIsLoading(true);\n                const data = await getMovieDetails(movieId);\n                setMovieData(data);\n            } catch (error) {\n            // change:\n                setError(error);\n            } finally { \n                setIsLoading(false);\n            }\n        }\n        \n        getMovies();\n    }, [movieId]);\n\n    return (\n        <section className={css.wrapper}>\n            {error && <h1>{error}</h1>}\n            {isLoading ? <Loader /> :\n                <>\n                    <Link to={backLinkHref.current}>\n                        <button>Go back</button> \n                    </Link>\n                    <div className={css.inner}>\n                        <img className={css.image} src={(poster_path === null) ? defaultImage: (INIT_PATH_IMAGE + poster_path)} alt={title} width='300' height='450'/>\n                        <div className={css.infoWrapper}>\n                            <h1 className={css.title}>{title}</h1>\n                            <p className={css.textAverage}>User score: {vote_average ? vote_average : 'no ratings'}</p>\n                            <ul className={css.list}>\n                                <li>\n                                    <p className={css.textName}>Overview:</p>\n                                    <p className={css.text}>{overview ? overview : 'overview is not specified'}</p>\n                                </li>\n                                <li>\n                                    <p className={css.textName}>Genres:</p>\n                                    <p className={css.text}>{(genres?.length !== 0) ? (genres?.map(({ name }) => name).join(', ')) : 'genres are not specified'}</p>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div>\n                        <h2 className={css.title}>Additional information</h2>\n                        <ul className={css.listLinks}>\n                            <li><NavLink to='cast' className={css.text}>Cast</NavLink></li>\n                            <li><NavLink to='reviews' className={css.text}>Reviews</NavLink></li>  \n                        </ul>\n                    </div>\n                </>\n            }\n\n            <Suspense fallback={ <Loader/> }>\n                <Routes>\n                    <Route path='cast' element={<Cast/>}/>\n                    <Route path='reviews' element={<Reviews/>}/>\n                </Routes>\n            </Suspense>\n        </section>\n    )\n}\n\n\nexport default MovieDetails;","import axios from 'axios';\n\n\nexport const api = axios.create({\n    baseURL: 'https://api.themoviedb.org',\n    headers : 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YzlkNDBlZmU0MDY0OTg1NDEzNGNmYjBjN2I3NDlhZCIsInN1YiI6IjY1OWVmNjk4ZmM1ZjA2MDBlZWMwNjhkYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.aIr7-CVGT2jT9DwLttfCYQotn2obDUZrLpp4n756NJ8'\n})\n","import { api } from './api'\n\nconst API_KEY = '6c9d40efe40649854134cfb0c7b749ad';\n\nexport const getTrendingMovies = async () => { \n    const { data } = await api(`3/trending/movie/day?language=en-US&api_key=${API_KEY}`)\n\treturn data\n}\n\nexport const getMovieDetails = async (movieId) => { \n    const { data } = await api(`3/movie/${movieId}?language=en-US&api_key=${API_KEY}`)\n\treturn data\n}\n\nexport const getCast = async (movieId) => { \n    const { data } = await api(`3/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`)\n\treturn data\n}\n\n// add query params - page ? \n\nexport const getReviews = async (movieId) => { \n    const { data } = await api(`3/movie/${movieId}/reviews?language=en-US&page=1&api_key=${API_KEY}`)\n\treturn data\n}\n\nexport const getMoviesByName = async (query) => { \n    const { data } = await api(`3/search/movie?include_adult=false&language=en-US&page=1&query=${query}&api_key=${API_KEY}`)\n\treturn data\n}\n"],"names":["Cast","lazy","Reviews","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","title","poster_path","vote_average","overview","genres","location","useLocation","backLinkHref","useRef","state","from","movieId","useParams","useEffect","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieDetails","sent","t0","finish","stop","apply","arguments","_jsxs","className","css","children","_jsx","Loader","_Fragment","Link","to","current","src","alt","width","height","length","map","_ref2","name","join","NavLink","Suspense","fallback","Routes","Route","path","element","api","axios","baseURL","headers","API_KEY","getTrendingMovies","_yield$api","concat","abrupt","_callee2","_yield$api2","_context2","_x","getCast","_ref3","_callee3","_yield$api3","_context3","_x2","getReviews","_ref4","_callee4","_yield$api4","_context4","_x3","getMoviesByName","_ref5","_callee5","query","_yield$api5","_context5","_x4"],"sourceRoot":""}